trigger: none

resources:
  pipelines:
    - pipeline: BuildPipeline
      source: Build pipeline
      trigger: true

stages:
- stage: Deploy
  jobs:
  # - job: DeployInfrastructure
  #   steps:
  #   - download: BuildPipeline
  #     artifact: Terraform
      
  #   - task: ExtractFiles@1
  #     inputs:
  #       archiveFilePatterns: '$(Pipeline.Workspace)/BuildPipeline/Terraform/*.zip'
  #       destinationFolder: '$(System.DefaultWorkingDirectory)/terraform'
        
  #   - task: TerraformInstaller@0
  #     inputs:
  #       terraformVersion: 'latest'
    
  #   - task: TerraformTaskV4@4
  #     inputs:
  #       provider: 'azurerm'
  #       command: 'init'
  #       workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  #       backendServiceArm: 'Azure subscription 1'
  #       backendAzureRmResourceGroupName: 'employee-system-rg'
  #       backendAzureRmStorageAccountName: 'employeesystemstorage'
  #       backendAzureRmContainerName: 'prod-tfstate'
  #       backendAzureRmKey: 'prod.terraform.tfstate'

  #   - task: TerraformTaskV4@4
  #     inputs:
  #       provider: 'azurerm'
  #       command: 'apply'
  #       workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  #       environmentServiceNameAzureRM: 'Azure subscription 1'

  - job: DeployWebAPI
    steps:  
    - download: BuildPipeline
      artifact: WebAPI
      
    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Azure subscription 1 (3ec5c0ac-5b6f-4a11-9982-b335e0ba3b94)'
        appName: 'employee-system-api'
        package: '$(Pipeline.Workspace)/BuildPipeline/WebAPI/WebAPI.zip'
        deploymentMethod: 'zipDeploy'