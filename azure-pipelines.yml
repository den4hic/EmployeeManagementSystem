pool:
  name: 'Default'
  demands:
    - agent.name -equals SelfHostedAgent

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  solution: '**/*.sln'
  publishDir: '$(Build.ArtifactStagingDirectory)/drop'
  dacpacFile: '**/*.dacpac'
  uiProjectPath: 'UIProject'
  uiPublishDir: '$(Build.ArtifactStagingDirectory)/ui'

steps:
- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Configuration=Release /p:Platform="Any CPU"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --output $(publishDir)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '$(dacpacFile)'
    TargetFolder: '$(publishDir)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(publishDir)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: NodeTool@0
  inputs:
    versionSpec: '20.x'

- script: |
    cd $(System.DefaultWorkingDirectory)/$(uiProjectPath)
    npm install
  displayName: 'Install UI project dependencies'

- script: |
    cd $(System.DefaultWorkingDirectory)/$(uiProjectPath)
    npm run build --prod
  displayName: 'Build UI project'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**'
    TargetFolder: '$(uiPublishDir)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(uiPublishDir)'
    ArtifactName: 'ui'
    publishLocation: 'Container'